{"mappings":"AAqMA,MAAMA,EAAcC,SAASC,cAAc,UACrCC,EAAUF,SAASC,cAAc,MAEvCF,EAAYI,iBAAiB,SAASC,UACpC,KAqBF,SAAsBC,GACpB,MAAMC,EAASD,EACZE,KAAIC,GACI,uBAAuBA,EAAKC,cAAcD,EAAKE,kBAAkBF,EAAKG,mBAE9EC,KAAK,IAERV,EAAQW,UAAYP,C,CA1BlBQ,OAMJV,iBACE,MAAMW,EAAW,uCAGXC,EAFU,CAAC,EAAG,EAAG,EAAG,EAAG,GAEGT,KAAIH,MAAMa,UACjBC,MAAM,GAAGH,WAAkBE,MAClCE,SAIlB,aADoBC,QAAQC,IAAIL,E,CAhBVM,G,CAEpB,MAAOC,GACPC,QAAQC,IAAIF,EAAMG,Q","sources":["src/index.js"],"sourcesContent":["// // import axios from 'axios';\n\n// // const booksLIstRef = document.querySelector('.books-list');\n// // const renderButtonRef = document.querySelector('[data-action=\"render\"]');\n// // const clearButtonRef = document.querySelector('[data-action=\"clear\"]');\n// // const addButtonRef = document.querySelector('[data-action=\"add\"]');\n// // const removeButtonRef = document.querySelector('[data-action=\"remove\"]');\n// // const changeButtonRef = document.querySelector('[data-action=\"change\"]');\n\n// // const newBook = {\n// //   title: 'New book',\n// //   author: 'Me',\n// //   publicationYear: 2023,\n// // };\n\n// // const params = {\n// //   title: 'New book',\n// //   author: 'Me',\n// //   publicationYear: 2023,\n// // };\n\n// // clearButtonRef.addEventListener('click', () => {\n// //   booksLIstRef.innerHTML = '';\n// // });\n\n// // renderButtonRef.addEventListener('click', () => {\n// //   fetchBooks().then(renderBooksMarkup).catch(console.error);\n// // });\n\n// // addButtonRef.addEventListener('click', () => {\n// //   postBook(newBook).then(console.log).catch(console.error);\n// // });\n\n// // removeButtonRef.addEventListener('click', () => {\n// //   removeBook(23).then(console.log).catch(console.error);\n// // });\n\n// // changeButtonRef.addEventListener('click', () => {\n// //   changeBook(1, params).then(console.log).catch(console.error);\n// // });\n\n// // function renderBooksMarkup({ data }) {\n// //   const markup = data\n// //     .map(book => {\n// //       return `<li><p>${book.title}</p><p>${book.author}</p></li>`;\n// //     })\n// //     .join('');\n\n// //   booksLIstRef.innerHTML = markup;\n// // }\n\n// // function fetchBooks() {\n// //   return axios.get('http://localhost:3000/books');\n// // }\n\n// // function postBook(book) {\n// //   return axios.post('http://localhost:3000/books', book);\n// // }\n\n// // function removeBook(bookId) {\n// //   return axios.delete(`http://localhost:3000/books/${bookId}`);\n// // }\n\n// // function changeBook(bookId, paramsToChange) {\n// //   return axios.patch(`http://localhost:3000/books/${bookId}`, paramsToChange);\n// // }\n\n// import axios from 'axios';\n\n// const formRef = document.querySelector('form');\n// const showBtnRef = document.querySelector(\"[data-action='show']\");\n// const listRef = document.querySelector('.books-list');\n\n// showBtnRef.addEventListener('click', () => {\n//   getAllBooks().then(showBooksMarkup).catch(console.error);\n// });\n\n// formRef.addEventListener('submit', e => {\n//   e.preventDefault();\n\n//   const { authorName, bookName } = e.currentTarget.elements;\n\n//   if (!authorName.value || !bookName.value) {\n//     return alert('Sorry, type in valid value');\n//   }\n\n//   renderMakup(authorName.value, bookName.value);\n//   postBook({\n//     title: bookName.value,\n//     author: authorName.value,\n//   })\n//     .then(console.log)\n//     .catch(console.error);\n//   e.currentTarget.reset();\n// });\n\n// function showBooksMarkup({ data }) {\n//   const markup = data\n//     .map(book => {\n//       return `<div><p>${book.title}</p><p>${book.author}</p></div>`;\n//     })\n//     .join('');\n\n//   document.body.insertAdjacentHTML('beforeend', markup);\n// }\n\n// function renderMakup(book, author) {\n//   const markup = `<li><p>Book: ${book}</p><p>Author: ${author}</p></li>`;\n\n//   listRef.insertAdjacentHTML('afterbegin', markup);\n// }\n\n// function postBook(book) {\n//   return axios.post(`http://localhost:3000/books`, book);\n// }\n\n// function getAllBooks() {\n//   return axios.get('http://localhost:3000/books');\n// }\n\n// async function fetchUsers() {\n//   const response = await fetch(`${BASE_URL}/users`);\n//   const users = await response.json();\n//   return users;\n// }\n\n// const fetchUsers = async () => {\n//   const response = await fetch(`${BASE_URL}/users`);\n//   const users = await response.json();\n//   return users;\n// };\n\n// fetchUsers().then(console.log).catch(console.error);\n\n// async function fetchUsers() {\n//   // try {\n//   // const response = await fetch(`${BASE_URL}/users`);\n//   // const users = await response.json();\n//   //   console.log(users);\n//   // } catch (error) {\n//   //   console.log(error.message);\n//   // }\n\n//   const response = await fetch(`${BASE_URL}/users`);\n//   const users = await response.json();\n//   return users;\n// }\n\n// fetchUsers().then(console.log).catch(console.error);\n\n// async function fetchUsers() {\n//   const r = await fetch(`${BASE_URL}/users`);\n//   const users = await r.json();\n//   return users;\n// }\n\n// async function doStuff() {\n//   try {\n//     const users = await fetchUsers();\n//     console.log(users);\n//   } catch (error) {\n//     console.timeLog(error.message);\n//   }\n// }\n\n// doStuff()\n\n// const fetchUsers = async () => {\n// const BASE_URL = 'https://jsonplaceholder.typicode.com';\n//   const first = await fetch(`${BASE_URL}/users/1`);\n//   const second = await fetch(`${BASE_URL}/users/2`);\n//   const third = await fetch(`${BASE_URL}/users/3`);\n\n//   const firstUser = await first.json();\n//   const secondUser = await second.json();\n//   const thirdUser = await third.json();\n\n//   console.log(firstUser, secondUser, thirdUser);\n// };\n\n// fetchUsers();\n\n// const fetchUsers = async () => {\n//   const BASE_URL = 'https://jsonplaceholder.typicode.com';\n//   const usersIds = [1, 2, 3];\n\n//   const arrayOfPromises = usersIds.map(async userId => {\n//     const response = await fetch(`${BASE_URL}/users/${userId}`);\n//     return response.json();\n//   });\n\n//   const users = await Promise.all(arrayOfPromises);\n//   return users;\n// };\n\n// fetchUsers().then(console.log).catch(console.error);\n\nconst fetchBtnRef = document.querySelector('button');\nconst listRef = document.querySelector('ul');\n\nfetchBtnRef.addEventListener('click', async () => {\n  try {\n    const users = await fetchUsers();\n    renderMarkup(users);\n  } catch (error) {\n    console.log(error.message);\n  }\n});\n\nasync function fetchUsers() {\n  const BASE_URL = 'https://jsonplaceholder.typicode.com';\n  const userIds = [1, 2, 3, 4, 5];\n\n  const arrayOfPromises = userIds.map(async userId => {\n    const response = await fetch(`${BASE_URL}/users/${userId}`);\n    return response.json();\n  });\n\n  const users = await Promise.all(arrayOfPromises);\n  return users;\n}\n\nfunction renderMarkup(users) {\n  const markup = users\n    .map(user => {\n      return `<li class=\"item\"><p>${user.name}</p><p>${user.username}</p><p>${user.email}</p></li>`;\n    })\n    .join('');\n\n  listRef.innerHTML = markup;\n}\n\n\n// fetch(`${BASE_URL}/users`)\n//   .then(r => r.json())\n//   .then(console.log)\n//   .catch(console.error);\n"],"names":["$1f0dc3b9307be026$var$fetchBtnRef","document","querySelector","$1f0dc3b9307be026$var$listRef","addEventListener","async","users","markup","map","user","name","username","email","join","innerHTML","$1f0dc3b9307be026$var$renderMarkup","BASE_URL","arrayOfPromises","userId","fetch","json","Promise","all","$1f0dc3b9307be026$var$fetchUsers","error","console","log","message"],"version":3,"file":"index.61a768bb.js.map"}